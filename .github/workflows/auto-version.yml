name: Auto Version Bump

# Add top-level permissions to ensure workflow has required access
permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  create-version-bump:
    if: github.event.pull_request.merged == true # only run if PR was merged
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # needed for getting all tags

      - name: Setup Git User
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Determine version bump type based on PR labels
      - name: Determine version bump type
        id: bump-type
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'bug') }}" == "true" ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'enhancement') }}" == "true" ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'documentation') }}" == "true" ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      # Create new branch and bump version
      - name: Create version bump branch
        id: create-branch
        run: |
          BRANCH="version-bump/auto-${GITHUB_SHA::8}"
          git checkout -b $BRANCH
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      # Bump version using our version manager (without pushing)
      - name: Update version
        id: bump-version
        run: |
          npm --no-git-tag-version version ${{ steps.bump-type.outputs.type }}
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      # Create PR for version bump
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Bump version to ${{ steps.bump-version.outputs.version }}"
          branch: ${{ steps.create-branch.outputs.branch }}
          delete-branch: true
          title: "chore: Bump version to ${{ steps.bump-version.outputs.version }}"
          body: |
            ðŸ¤– Automatic version bump triggered by merge of #${{ github.event.pull_request.number }}
            
            **Changes:**
            - Version: ${{ steps.bump-version.outputs.version }}
            - Type: ${{ steps.bump-type.outputs.type }}
            
            This PR was automatically created by the Auto Version Bump workflow.
          labels: |
            automated
            version-bump

      # Comment on the original PR
      - name: Comment on Original PR
        uses: actions/github-script@v7
        with:
          script: |
            const newVersion = '${{ steps.bump-version.outputs.version }}'
            const bumpType = '${{ steps.bump-type.outputs.type }}'
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“¦ Created version bump PR for \`${newVersion}\` (${bumpType} increment)\n\nPlease review and merge the version bump PR to complete the release.`
            })