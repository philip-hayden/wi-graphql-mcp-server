name: Auto Version Bump

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  version-bump:
    if: github.event.pull_request.merged == true # only run if PR was merged
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed for pushing version bump commit
      pull-requests: write # needed for commenting on PR

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # needed for getting all tags
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Determine version bump type based on PR labels
      - name: Determine version bump type
        id: bump-type
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'major') }}" == "true" ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'minor') }}" == "true" ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      # Bump version using our version manager
      - name: Bump version
        run: |
          npm run version:bump -- --type ${{ steps.bump-type.outputs.type }}

      # Comment on the PR with the new version
      - name: Get new version
        id: new-version
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const newVersion = '${{ steps.new-version.outputs.version }}'
            const bumpType = '${{ steps.bump-type.outputs.type }}'
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ Version bumped to \`${newVersion}\` (${bumpType} increment)`
            })